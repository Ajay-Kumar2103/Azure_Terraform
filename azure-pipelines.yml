trigger:
- main

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      name: '<agent-name>'
    steps:

    - task: TerraformTaskV4@4
      displayName: Tf init
      inputs:
       provider: 'azurerm'
       command: 'init'
       backendServiceArm: '<Azure subscription id>'
       backendAzureRmResourceGroupName: '<resource-group-name>'
       backendAzureRmStorageAccountName: '<storage-account-name>'
       backendAzureRmContainerName: '<container-name>'
       backendAzureRmKey: '<terraform-state-file-name>'

    - task: TerraformTaskV4@4
      displayName: Tf validate
      inputs:
       provider: 'azurerm'
       command: 'validate'

    - task: TerraformTaskV4@4
      displayName: Tf fmt
      inputs:
        provider: 'azurerm'
        command: 'custom'
        outputTo: 'console'
        customCommand: 'fmt'
        environmentServiceNameAzureRM: '<Azure subscription id>'

    - task: TerraformTaskV4@4
      displayName: Tf plan
      inputs:
       provider: 'azurerm'
       command: 'plan'
       commandOptions: '-out $(Build.SourcesDirectory)/tfplanfile'
       environmentServiceNameAzureRM: '<Azure subscription id>'

    - task: ArchiveFiles@2
      displayName: Archive files
      inputs:
       rootFolderOrFile: '$(Build.SourcesDirectory)/'
       includeRootFolder: false
       archiveType: 'zip'
       archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
       replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: Publish build
      inputs:
       PathtoPublish: '$(Build.ArtifactStagingDirectory)'
       ArtifactName: '$(Build.BuildId)-build'
       publishLocation: 'Container'

